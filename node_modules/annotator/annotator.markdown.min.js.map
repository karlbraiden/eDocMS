{"version":3,"file":"annotator.markdown.min.js","sources":["../node_modules/browserify/node_modules/browser-pack/_prelude.js","namespace.coffee","plugin/markdown.coffee"],"names":[],"mappings":";;;;;;;;;;CAAA,SAAA,GAAA,GAAA,gBAAA,SAAA,OAAA,QAAA,QAAA,IAAA,kBAAA,SAAA,OAAA,IAAA,OAAA,OAAA,CAAA,GAAA,EAAA,oBAAA,QAAA,EAAA,OAAA,mBAAA,QAAA,EAAA,OAAA,mBAAA,QAAA,EAAA,KAAA,IAAA,GAAA,CAAA,GAAA,EAAA,YAAA,EAAA,cAAA,EAAA,EAAA,SAAA,EAAA,WAAA,EAAA,SAAA,MAAA,WAAA,MAAA,SAAA,GAAA,EAAA,EAAA,GAAA,QAAA,GAAA,EAAA,GAAA,IAAA,EAAA,GAAA,CAAA,IAAA,EAAA,GAAA,CAAA,GAAA,GAAA,kBAAA,UAAA,OAAA,KAAA,GAAA,EAAA,MAAA,GAAA,GAAA,EAAA,IAAA,EAAA,MAAA,GAAA,GAAA,EAAA,MAAA,IAAA,OAAA,uBAAA,EAAA,KAAA,GAAA,GAAA,EAAA,IAAA,WAAA,GAAA,GAAA,GAAA,KAAA,EAAA,QAAA,SAAA,GAAA,GAAA,GAAA,EAAA,GAAA,GAAA,EAAA,OAAA,GAAA,EAAA,EAAA,IAAA,EAAA,EAAA,QAAA,EAAA,EAAA,EAAA,GAAA,MAAA,GAAA,GAAA,QAAA,IAAA,GAAA,GAAA,kBAAA,UAAA,QAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,EAAA,EAAA,GAAA,OAAA,KAAA,UAAA,SAAA,EAAA,ICKA,SAAA,GAAA,GAAA,GAAA,EAAA,CAWE,IAXF,mBAAO,IAAP,OAAA,IAAA,EAAA,GACA,mBAAA,IAAA,OAAA,GAAQ,MAAR,IAAA,EAAA,GACA,mBAAA,SAAA,OAAA,QAAQ,MAAR,IAAA,EAAA,QAFA,EAAA,MAAA,EAAA,EAAA,UAAA,OAMA,MAAA,IANA,GAAA,MAAA,EAAA,OAAA,EAAA,EAAA,QAAA,EAAA,IAAA,OAAA,QAAA,MAAA,EAAA,EAAA,QAAA,aAAA,OAAA,QAWkB,kBAAN,GAXZ,KAAA,IAAA,OAAA,4HAAA,GAAA,QAAA,IAAA,KAAA,KAAA,mBAAA,MAAA,KAAA,mBAAA,QAAA,gBAAA,WAAA,SAAA,EAAA,GAAA,EAAA,QAAA,EAAA,eAAA,GAAA,SAAA,EAAA,GCLA,GAAA,GAAA,EAAA,EAAA,KAAA,eAAA,EAAA,SAAA,EAAA,GAAA,QAAA,KAAA,KAAA,YAAA,EAAA,IAAA,GAAA,KAAA,GAAA,EAAA,KAAA,EAAA,KAAA,EAAA,GAAA,EAAA,GAAA,OAAA,GAAA,UAAA,EAAA,UAAA,EAAA,UAAA,GAAA,GAAA,EAAA,UAAA,EAAA,UAAA,EAAA,GAAY,EAAQ,aAApB,EACI,EAAU,KAAK,EADnB,EAAA,SAAA,GAiBe,QAAA,KACX,EAAA,UAAA,YAAA,MAAA,KAAA,WACG,OAAA,mBAAA,WAAA,OAAA,SAAA,SAAA,UAAA,SACD,EAAA,UAAA,YAAA,MAAA,KAAA,WACA,KAAC,UAAgB,GAAA,UAAS,WAE1B,QAAQ,MAAM,EAAU,GAAG,+EAN/B,MAAA,GAAA,EAAA,GAAA,EAAA,UASA,WAAY,WAAA,MACV,MAAK,SAAS,KAAC,UAAW,4BAA6B,KAAK,kBAV9D,EAAA,UAyBA,gBAAiB,SAAC,EAAO,GAEvB,GAAA,EAAA,OAAA,GAAO,EAAU,KAAK,OAAO,EAAW,MAAQ,IAChD,EAAE,GAAO,KAAK,KAAK,QAAQ,KA5B7B,EAAA,UAwCA,QAAS,SAAC,GAAD,MACP,MAAC,UAAU,SAAS,IAzCtB,GAXqB,EAAU,QANjC,EA4DU,OAAO,SAAS,WAAY,GA5DtC,EA8DO,QAAU,YA9DjB,IAAA","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error(\"Cannot find module '\"+o+\"'\")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","# In order to build portable extension bundles that can be used with AMD and\n# script concatenation plugins are built with this module as 'annotator'.\n\n# Annotator will export itself globally when the built UMD modules are used in\n# a legacy environment of simple script concatenation.\nself = self if self?\nself ?= global if global?\nself ?= window if window?\nAnnotator = self?.Annotator\n\n# In a pure AMD environment, Annotator may not be exported globally.\nAnnotator ?= if self?.define?.amd then self?.require('annotator')\n\n# If we haven't successfully loaded Annotator by this point, there's no point in\n# going on to load the plugin, so throw a fatal error.\nif typeof Annotator isnt 'function'\n  throw new Error(\"Could not find Annotator! In a webpage context, please ensure\n                   that the Annotator script tag is loaded before any plugins.\")\n\n# Note: when working in a CommonJS environment and bundling requirements into\n# applications then require calls should refer to modules from the npm lib\n# directory of annotator package and avoid this altogether.\nmodule.exports = Annotator\n","Annotator = require('annotator')\n$ = Annotator.Util.$\n\n\n# Plugin that renders annotation comments displayed in the Viewer in Markdown.\n# Requires Showdown library to be present in the page when initialised.\nclass Markdown extends Annotator.Plugin\n  # Public: Initailises an instance of the Markdown plugin.\n  #\n  # element - The Annotator#element.\n  # options - An options Object (there are currently no options).\n  #\n  # Examples\n  #\n  #   plugin = new Annotator.Plugin.Markdown(annotator.element)\n  #\n  # Returns a new instance of Annotator.Plugin.Markdown.\n  constructor: (element, options) ->\n    super\n    if Showdown?.converter?\n      super\n      @converter = new Showdown.converter()\n    else\n      console.error Annotator._t(\"To use the Markdown plugin, you must include\n                                  Showdown into the page first.\")\n\n  pluginInit: ->\n    this.listenTo(@annotator, 'annotationViewerTextField', this.updateTextField)\n\n  # Annotator event callback. Displays the annotation.text as a Markdown\n  # rendered version.\n  #\n  # field      - The viewer field Element.\n  # annotation - The annotation Object being displayed.\n  #\n  # Examples\n  #\n  #   # Normally called by Annotator#viewer()\n  #   plugin.updateTextField(field, {text: 'My _markdown_ comment'})\n  #   $(field).html() # => Returns \"My <em>markdown</em> comment\"\n  #\n  # Returns nothing\n  updateTextField: (field, annotation) ->\n    # Escape any HTML in the text to prevent XSS.\n    text = Annotator.Util.escape(annotation.text || '')\n    $(field).html(this.convert(text))\n\n  # Converts provided text into markdown.\n  #\n  # text - A String of Markdown to render as HTML.\n  #\n  # Examples\n  #\n  # plugin.convert('This is _very_ basic [Markdown](http://daringfireball.com)')\n  # # => Returns \"This is <em>very<em> basic <a href=\"http://...\">Markdown</a>\"\n  #\n  # Returns HTML string.\n  convert: (text) ->\n    @converter.makeHtml text\n\nAnnotator.Plugin.register('Markdown', Markdown)\n\nmodule.exports = Markdown\n"]}