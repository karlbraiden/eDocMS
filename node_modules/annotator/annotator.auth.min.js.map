{"version":3,"file":"annotator.auth.min.js","sources":["../node_modules/browserify/node_modules/browser-pack/_prelude.js","namespace.coffee","plugin/auth.coffee"],"names":[],"mappings":"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","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error(\"Cannot find module '\"+o+\"'\")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","# In order to build portable extension bundles that can be used with AMD and\n# script concatenation plugins are built with this module as 'annotator'.\n\n# Annotator will export itself globally when the built UMD modules are used in\n# a legacy environment of simple script concatenation.\nself = self if self?\nself ?= global if global?\nself ?= window if window?\nAnnotator = self?.Annotator\n\n# In a pure AMD environment, Annotator may not be exported globally.\nAnnotator ?= if self?.define?.amd then self?.require('annotator')\n\n# If we haven't successfully loaded Annotator by this point, there's no point in\n# going on to load the plugin, so throw a fatal error.\nif typeof Annotator isnt 'function'\n  throw new Error(\"Could not find Annotator! In a webpage context, please ensure\n                   that the Annotator script tag is loaded before any plugins.\")\n\n# Note: when working in a CommonJS environment and bundling requirements into\n# applications then require calls should refer to modules from the npm lib\n# directory of annotator package and avoid this altogether.\nmodule.exports = Annotator\n","Annotator = require('annotator')\n$ = Annotator.Util.$\n\n\n# Public: Creates a Date object from an ISO8601 formatted date String.\n#\n# string - ISO8601 formatted date String.\n#\n# Returns Date instance.\ncreateDateFromISO8601 = (string) ->\n  regexp = (\n    \"([0-9]{4})(-([0-9]{2})(-([0-9]{2})\" +\n    \"(T([0-9]{2}):([0-9]{2})(:([0-9]{2})(\\\\.([0-9]+))?)?\" +\n    \"(Z|(([-+])([0-9]{2}):([0-9]{2})))?)?)?)?\"\n  )\n\n  d = string.match(new RegExp(regexp))\n\n  offset = 0\n  date = new Date(d[1], 0, 1)\n\n  date.setMonth(d[3] - 1) if d[3]\n  date.setDate(d[5]) if d[5]\n  date.setHours(d[7]) if d[7]\n  date.setMinutes(d[8]) if d[8]\n  date.setSeconds(d[10]) if d[10]\n  date.setMilliseconds(Number(\"0.\" + d[12]) * 1000) if d[12]\n\n  if d[14]\n    offset = (Number(d[16]) * 60) + Number(d[17])\n    if d[15] == '-'\n      factor = 1\n    else\n      factor = -1\n    offset *= factor\n\n  offset -= date.getTimezoneOffset()\n  time = (Number(date) + (offset * 60 * 1000))\n\n  date.setTime(Number(time))\n  date\n\nbase64Decode = (data) ->\n  if atob?\n    # Gecko and Webkit provide native code for this\n    atob(data)\n  else\n    # Adapted from MIT/BSD licensed code at\n    # http://phpjs.org/functions/base64_decode version 1109.2015\n    b64 = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\"\n    i = 0\n    ac = 0\n    dec = \"\"\n    tmp_arr = []\n\n    if not data\n      return data\n\n    data += ''\n\n    while i < data.length\n      # unpack four hexets into three octets using index points in b64\n      h1 = b64.indexOf(data.charAt(i))\n      i += 1\n      h2 = b64.indexOf(data.charAt(i))\n      i += 1\n      h3 = b64.indexOf(data.charAt(i))\n      i += 1\n      h4 = b64.indexOf(data.charAt(i))\n      i += 1\n\n      bits = h1 << 18 | h2 << 12 | h3 << 6 | h4\n\n      o1 = bits >> 16 & 0xff\n      o2 = bits >> 8 & 0xff\n      o3 = bits & 0xff\n\n      if h3 == 64\n        tmp_arr[ac] = String.fromCharCode(o1)\n        ac += 1\n      else if h4 == 64\n        tmp_arr[ac] = String.fromCharCode(o1, o2)\n        ac += 1\n      else\n        tmp_arr[ac] = String.fromCharCode(o1, o2, o3)\n        ac += 1\n\n    tmp_arr.join('')\n\nbase64UrlDecode = (data) ->\n  m = data.length % 4\n  if m != 0\n    for i in [0...4 - m]\n      data += '='\n  data = data.replace(/-/g, '+')\n  data = data.replace(/_/g, '/')\n  base64Decode(data)\n\nparseToken = (token) ->\n  [head, payload, sig] = token.split('.')\n  JSON.parse(base64UrlDecode(payload))\n\n# Public: Supports the Store plugin by providing Authentication headers.\nclass Auth extends Annotator.Plugin\n  # User options that can be provided.\n  options:\n\n    # An authentication token. Used to skip the request to the server for a\n    # a token.\n    token: null\n\n    # The URL on the local server to request an authentication token.\n    tokenUrl: '/auth/token'\n\n    # If true will try and fetch a token when the plugin is initialised.\n    autoFetch: true\n\n  # Public: Create a new instance of the Auth plugin.\n  #\n  # element - The element to bind all events to. Usually the Annotator#element.\n  # options - An Object literal containing user options.\n  #\n  # Examples\n  #\n  #   plugin = new Annotator.Plugin.Auth(annotator.element, {\n  #     tokenUrl: '/my/custom/path'\n  #   })\n  #\n  # Returns instance of Auth.\n  constructor: (element, options) ->\n    super\n\n    # List of functions to be executed when we have a valid token.\n    @waitingForToken = []\n\n  # Public: Initialises the plugin.\n  #\n  # Returns nothing.\n  pluginInit: ->\n    if @options.token\n      this.setToken(@options.token)\n    else\n      this.requestToken()\n\n  # Public: Makes a request to the local server for an authentication token.\n  #\n  # Examples\n  #\n  #   auth.requestToken()\n  #\n  # Returns jqXHR object.\n  requestToken: ->\n    @requestInProgress = true\n\n    $.ajax\n      url: @options.tokenUrl\n      dataType: 'text'\n      xhrFields:\n        withCredentials: true # Send any auth cookies to the backend\n\n    # on success, set the auth token\n    .done (data, status, xhr) =>\n      this.setToken(data)\n\n    # on failure, relay any message given by the server to the user with a\n    # notification\n    .fail (xhr, status, err) ->\n      msg = Annotator._t(\"Couldn't get auth token:\")\n      console.error \"#{msg} #{err}\", xhr\n      Annotator.showNotification(\n        \"#{msg} #{xhr.responseText}\",\n        Annotator.Notification.ERROR\n      )\n\n    # always reset the requestInProgress indicator\n    .always =>\n      @requestInProgress = false\n\n  # Public: Sets the @token and checks it's validity. If the token is invalid\n  # requests a new one from the server.\n  #\n  # token - A token string.\n  #\n  # Examples\n  #\n  #   auth.setToken('eyJh...9jQ3I')\n  #\n  # Returns nothing.\n  setToken: (token) ->\n    @token = token\n    # Parse the token without verifying its authenticity:\n    @_unsafeToken = parseToken(token)\n\n    if this.haveValidToken()\n      if @options.autoFetch\n        # Set timeout to fetch new token 2 seconds before current token expiry\n        @refreshTimeout = setTimeout(\n          (=> this.requestToken()),\n          (this.timeToExpiry() - 2) * 1000\n        )\n\n      # Set headers field on this.element\n      this.updateHeaders()\n\n      # Run callbacks waiting for token\n      while @waitingForToken.length > 0\n        @waitingForToken.pop()(@_unsafeToken)\n\n    else\n      console.warn Annotator._t(\"Didn't get a valid token.\")\n      if @options.autoFetch\n        console.warn Annotator._t(\"Getting a new token in 10s.\")\n        setTimeout((=> this.requestToken()), 10 * 1000)\n\n  # Public: Checks the validity of the current token. Note that this *does\n  # not* check the authenticity of the token.\n  #\n  # Examples\n  #\n  #   auth.haveValidToken() # => Returns true if valid.\n  #\n  # Returns true if the token is valid.\n  haveValidToken: ->\n    allFields = (\n      @_unsafeToken and\n      @_unsafeToken.issuedAt and\n      @_unsafeToken.ttl and\n      @_unsafeToken.consumerKey\n    )\n\n    if allFields && this.timeToExpiry() > 0\n      return true\n    else\n      return false\n\n  # Public: Calculates the time in seconds until the current token expires.\n  #\n  # Returns Number of seconds until token expires.\n  timeToExpiry: ->\n    now = new Date().getTime() / 1000\n    issue = createDateFromISO8601(@_unsafeToken.issuedAt).getTime() / 1000\n\n    expiry = issue + @_unsafeToken.ttl\n    timeToExpiry = expiry - now\n\n    if (timeToExpiry > 0) then timeToExpiry else 0\n\n  # Public: Updates the headers to be sent with the Store requests.\n  #\n  # Returns nothing.\n  updateHeaders: ->\n    if this.annotator.store?.setHeader?\n      this.annotator.store.setHeader('x-annotator-auth-token', @token)\n\n  # Runs the provided callback if a valid token is available. Otherwise requests\n  # a token until it recieves a valid one.\n  #\n  # callback - A callback function to call once a valid token is obtained.\n  #\n  # Examples\n  #\n  #   auth.withToken ->\n  #     store.loadAnnotations()\n  #\n  # Returns nothing.\n  withToken: (callback) ->\n    if not callback?\n      return\n\n    if this.haveValidToken()\n      callback(@_unsafeToken)\n    else\n      this.waitingForToken.push(callback)\n      if not @requestInProgress\n        this.requestToken()\n\nAnnotator.Plugin.register('Auth', Auth)\n\nmodule.exports = Auth\n"]}