{"version":3,"file":"annotator.document.min.js","sources":["../node_modules/browserify/node_modules/browser-pack/_prelude.js","namespace.coffee","plugin/document.coffee"],"names":[],"mappings":"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","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error(\"Cannot find module '\"+o+\"'\")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","# In order to build portable extension bundles that can be used with AMD and\n# script concatenation plugins are built with this module as 'annotator'.\n\n# Annotator will export itself globally when the built UMD modules are used in\n# a legacy environment of simple script concatenation.\nself = self if self?\nself ?= global if global?\nself ?= window if window?\nAnnotator = self?.Annotator\n\n# In a pure AMD environment, Annotator may not be exported globally.\nAnnotator ?= if self?.define?.amd then self?.require('annotator')\n\n# If we haven't successfully loaded Annotator by this point, there's no point in\n# going on to load the plugin, so throw a fatal error.\nif typeof Annotator isnt 'function'\n  throw new Error(\"Could not find Annotator! In a webpage context, please ensure\n                   that the Annotator script tag is loaded before any plugins.\")\n\n# Note: when working in a CommonJS environment and bundling requirements into\n# applications then require calls should refer to modules from the npm lib\n# directory of annotator package and avoid this altogether.\nmodule.exports = Annotator\n","Annotator = require('annotator')\n$ = Annotator.Util.$\n\n\nclass Document extends Annotator.Plugin\n  pluginInit: ->\n    this.getDocumentMetadata()\n    this.listenTo(@annotator, 'beforeAnnotationCreated',\n      this.beforeAnnotationCreated)\n\n  # returns the primary URI for the document being annotated\n  uri: =>\n    uri = decodeURIComponent document.location.href\n    for link in @metadata\n      if link.rel == \"canonical\"\n        uri = link.href\n    return uri\n\n  # returns all uris for the document being annotated\n\n  uris: =>\n    uniqueUrls = {}\n    for link in @metadata.link\n      uniqueUrls[link.href] = true if link.href\n    return (href for href of uniqueUrls)\n\n  beforeAnnotationCreated: (annotation) ->\n    annotation.document = @metadata\n\n  getDocumentMetadata: =>\n    @metadata = {}\n\n    # first look for some common metadata types\n    # TODO: look for microdata/rdfa?\n    this._getHighwire()\n    this._getDublinCore()\n    this._getFacebook()\n    this._getEprints()\n    this._getPrism()\n    this._getTwitter()\n    this._getFavicon()\n\n    # extract out/normalize some things\n    this._getTitle()\n    this._getLinks()\n\n    return @metadata\n\n  _getHighwire: =>\n    return @metadata.highwire = this._getMetaTags(\"citation\", \"name\", \"_\")\n\n  _getFacebook: =>\n    return @metadata.facebook = this._getMetaTags(\"og\", \"property\", \":\")\n\n  _getTwitter: =>\n    return @metadata.twitter = this._getMetaTags(\"twitter\", \"name\", \":\")\n\n  _getDublinCore: =>\n    return @metadata.dc = this._getMetaTags(\"dc\", \"name\", \".\")\n\n  _getPrism: =>\n    return @metadata.prism = this._getMetaTags(\"prism\", \"name\", \".\")\n\n  _getEprints: =>\n    return @metadata.eprints = this._getMetaTags(\"eprints\", \"name\", \".\")\n\n  _getMetaTags: (prefix, attribute, delimiter) ->\n    tags = {}\n    for meta in $(\"meta\")\n      name = $(meta).attr(attribute)\n      content = $(meta).prop(\"content\")\n      if name\n        match = name.match(RegExp(\"^#{prefix}#{delimiter}(.+)$\", \"i\"))\n        if match\n          n = match[1]\n          if tags[n]\n            tags[n].push(content)\n          else\n            tags[n] = [content]\n    return tags\n\n  _getTitle: =>\n    if @metadata.highwire.title\n      @metadata.title = @metadata.highwire.title[0]\n    else if @metadata.eprints.title\n      @metadata.title = @metadata.eprints.title\n    else if @metadata.prism.title\n      @metadata.title = @metadata.prism.title\n    else if @metadata.facebook.title\n      @metadata.title = @metadata.facebook.title\n    else if @metadata.twitter.title\n      @metadata.title = @metadata.twitter.title\n    else if @metadata.dc.title\n      @metadata.title = @metadata.dc.title\n    else\n      @metadata.title = $(\"head title\").text()\n\n  _getLinks: =>\n    # we know our current location is a link for the document\n    @metadata.link = [href: document.location.href]\n\n    # look for some relevant link relations\n    for link in $(\"link\")\n      l = $(link)\n      href = this._absoluteUrl(l.prop('href')) # get absolute url\n      rel = l.prop('rel')\n      type = l.prop('type')\n      lang = l.prop('hreflang')\n\n      if rel not in [\"alternate\", \"canonical\", \"bookmark\"] then continue\n\n      if rel is 'alternate'\n        # Ignore feeds resources\n        if type and type.match /^application\\/(rss|atom)\\+xml/ then continue\n        # Ignore alternate languages\n        if lang then continue\n\n      @metadata.link.push(href: href, rel: rel, type: type)\n\n    # look for links in scholar metadata\n    for name, values of @metadata.highwire\n\n      if name == \"pdf_url\"\n        for url in values\n          @metadata.link.push\n            href: this._absoluteUrl(url)\n            type: \"application/pdf\"\n\n      # kind of a hack to express DOI identifiers as links but it's a\n      # convenient place to look them up later, and somewhat sane since\n      # they don't have a type\n\n      if name == \"doi\"\n        for doi in values\n          if doi[0..3] != \"doi:\"\n            doi = \"doi:\" + doi\n          @metadata.link.push(href: doi)\n\n    # look for links in dublincore data\n    for name, values of @metadata.dc\n      if name == \"identifier\"\n        for id in values\n          if id[0..3] == \"doi:\"\n            @metadata.link.push(href: id)\n\n  _getFavicon: =>\n    for link in $(\"link\")\n      if $(link).prop(\"rel\") in [\"shortcut icon\", \"icon\"]\n        @metadata[\"favicon\"] = this._absoluteUrl(link.href)\n\n  # hack to get a absolute url from a possibly relative one\n\n  _absoluteUrl: (url) ->\n    d = document.createElement('a')\n    d.href = url\n    d.href\n\nAnnotator.Plugin.register('Document', Document)\n\nmodule.exports = Document\n"]}